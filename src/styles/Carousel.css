
  .carousel-inner {
    text-align: center;
    position: relative; /* For positioning controls or other elements within */
  }

  .carousel-title {
    font-size: 2.5em;
    color: #333;
    margin-bottom: 10px;
  }

  .carousel-subtitle {
    font-size: 1.2em;
    color: #666;
    margin-bottom: 30px;
  }

  .carousel-wrapper {

    position: relative;
    width: 100%; /* Define a width for your carousel area */
    height: 300px; /* Define a height for your carousel area */
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: visible;
    margin: 0 auto;
    transform-style: preserve-3d; /* Crucial: Allows child elements to maintain 3D transforms */
    /* This wrapper serves as the container for the 3D space */
  }

  .carousel-track {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%; /* Take full width of wrapper */
    height: 100%; /* Take full height of wrapper */
    transform-style: preserve-3d; /* Crucial: Allows child elements to maintain 3D transforms */
    transform: translate(-50%, -50%)
    rotateY(var(--card-angle, 0deg))
    translateZ(360px); /* Use a CSS variable for rotation */
    transition: transform 0.8s ease-in-out; /* Smooth rotation */
    transform-origin: center center;
  }

  /* Define the angle directly in JSX instead of using a CSS variable in this case,
     as your JSX directly sets the transform property.
     The `translate(-50%, -50%)` is applied here to perfectly center the track itself. */


  .carousel-card {
    position: absolute;
    width: 280px; /* Slightly smaller than wrapper width for spacing */
    height: 180px; /* Slightly smaller than wrapper height for spacing */
    background-color: #f0f0f0;
    border: 1px solid #ddd;
    border-radius: 8px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    padding: 20px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    backface-visibility: hidden; /* Prevents flickering/rendering issues on back side */
    top: 50%; /* Center vertically within the track */
    left: 50%; /* Center horizontally within the track */
    transform-origin: center center; /* Ensure rotation happens around the card's center */
    /* Important: translateX(-50%) translateY(-50%) to truly center the card itself
       after its 3D transformations. This brings the top-left corner of the card
       to the center, and then shifts it back by half its width/height. */
    transform: translateX(-50%) translateY(-50%) rotateY(var(--card-angle, 0deg)) translateZ(var(--radius, 360px));
    /* Use CSS variables for dynamic values from JSX */
  }

  .carousel-card h3 {
    font-size: 1.5em;
    margin-bottom: 10px;
    color: #444;
  }

  .carousel-card p {
    font-size: 0.9em;
    color: #777;
    flex-grow: 10; /* Allows description to take up available space */
  }


  .carousel-card a {
    display: inline-block;
    margin-top: 15px;
    padding: 8px 15px;
    background-color: #007bff;
    color: white;
    text-decoration: none;
    border-radius: 5px;
    transition: background-color 0.3s ease;
  }

  .carousel-card a:hover {
    background-color: #0056b3;
  }

  .carousel-controls {
    margin-top: 30px;
    display: flex;
    gap: 20px;
    justify-content: center;
  }

  .carousel-controls button {
    background-color: #28a745;
    color: white;
    border: none;
    padding: 10px 20px;
    font-size: 1.5em;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s ease;
  }

  .carousel-controls button:hover {
    background-color: #218838;
  }